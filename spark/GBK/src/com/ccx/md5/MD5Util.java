package com.ccx.md5;

import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;


public class MD5Util
{
    public final static String MD5(String s)
    {
        //char hexDigits[] = { '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F' };
        // update MD5 string to lower-case to adapt to UMP test
        // TODO: check lower-case or upperp-case are the MD5 standard
        char hexDigits[] = { '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f' };
        try
        {
            byte[] btInput = s.getBytes("GBK");
            
            MessageDigest mdInst = MessageDigest.getInstance("MD5");
            
            mdInst.update(btInput);
            
            byte[] md = mdInst.digest();
            
            int j = md.length;
            char str[] = new char[j * 2];
            int k = 0;
            for (int i = 0; i < j; i++)
            {
                byte byte0 = md[i];
                str[k++] = hexDigits[byte0 >>> 4 & 0xf];
                str[k++] = hexDigits[byte0 & 0xf];
            }
            return new String(str);
        }
        catch (Exception e)
        {
            return null;
        }
    }

    
    public static void main(String[] args)
    {
    	
    	String vs = "361129199311177885,370301198606133776,430528196907306317,340203197704091984,360782198703254404,371422197604256987,340102195302204092,530521198706195209,15252619861129344X,230623198908068985,450326197702188294,360702197605150488,500382198305126348,36010419580415735X,41062119860830756X,130107196111108740,430581198506243352,210881195801249222,510726196107076558,152701199302187895,622322195903144545,320323199411258193,530424197508254780,360721198411168704,510125198001130157,610330193810261985,411401197802266263,511902198303100412,44158119700506459X,130729195806080744,61042719840920911X,230703196001037671,340600196002017040,210303199007265745,130500194210219567,650204199210174980,34100020110906173X,440501199709302759,440421193901249292,342201199507230847,340604199608121531,340604199608120418,210303199007265745,130500194210219567,650204199210174980,34100020110906173X,440501199709302759,440421193901249292,342201199507230847,340604199608121531,340604199608120418,";
    	vs="231159198906293737,513058199812181461,342499197701041541,131106199702301405,230738197802186199,412699198803040410,362814197510238665,440068197910180281,413296199910170098,500458199712269046,37007419911105784X,152500199909050095,130688197412135044,441285199704204823,440821199009312459,542221198606066490,530524198606063494,370202198606062171,450404198606061578,211101198606069730,140581198606062138,370601198606065554,411628198606064571,320483198606065516,513228198606060312,510503198606067107,540127198606064082,440107198606062029,410721198606067481,610725198606063002,";
    	vs = "ÁõÏþÎ°";
    	String[] vvs = vs.split(",");
    	for(String v:vvs) {
    		String s = "";
//    		 s = "put 'cidmd5_1990s','"+MD5(v).toUpperCase()+"','cid:value','"+v+"'";
//    		 s = "put 'namemd5_all','"+MD5(v).toUpperCase()+"','name:value','"+v+"'";
    		 s = "put 'mobilemd5_all_gen10','"+MD5(v).toUpperCase()+"','mobile:value','"+v+"'";
    	    System.out.println(s);	
    	} 
    }
}